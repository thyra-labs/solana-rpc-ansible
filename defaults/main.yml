validator_username: validator
validator_cpu_governor: performance

validator_network: mainnet

validator_firewall_allow_ssh: true

validator_root: /solana
validator_ledger_location: /solana/ledger
validator_accounts_location: /solana/accounts
validator_snapshots_location: /solana/snapshots

validator_environment:
  - RUST_LOG=solana=info

validator_install_rust: true
validator_source_version: v2.3.6-jito
validator_shredstream_version: master
validator_yellowstone_version: v9.0.0+solana.2.3.6
validator_peregrine_version: main

validator_generate_keypair: true
validator_public_key: "/home/{{ validator_username }}/identity.json"
validator_keypairs: []

validator_rpc_threads: 32
validator_full_rpc_api: true
validator_enable_geyser: false
validator_x_token: ""
validator_enable_shredstream: false
validator_enable_peregrine: false
validator_rpc_history: false

validator_account_index:
  - program-id
  - spl-token-owner
  - spl-token-mint
validator_index_exclude_keys: []
validator_index_include_keys: []

validator_known_validators: []
validator_authorized_voters: []

validator_minimal_snapshot_download_speed: "200000000"
validator_incremental_snapshot_interval_slots: "1000"
validator_full_snapshot_interval_slots: "50000"
validator_rpc_max_multiple_accounts: "5000"

validator_gossip_port: "8001"
validator_rpc_address: "0.0.0.0:8899"
validator_dynamic_port_range: "8000-10000"
validator_wal_recovery_mode: skip_any_corrupted_record
validator_limit_ledger_size: ""
validator_accounts_db_cache_limit: 800000
validator_accounts_index_memory_limit: 150000

validator_bigtable_enabled: false
validator_bigtable_upload_enabled: false

validator_enabled_services:
  - solana-rpc
validator_disabled_services: []

validator_sysctl_optimisations:
  fs.nr_open: "1000000"
  kernel.nmi_watchdog: "0"
  kernel.pid_max: "65536"
  net.ipv4.tcp_fastopen: "3"
  net.core.rmem_max: "134217728"
  net.core.rmem_default: "134217728"
  net.core.wmem_max: "134217728"
  net.core.wmem_default: "134217728"
  vm.max_map_count: "1000000"

# Repository URLs (override to use forks)
validator_jito_solana_repo_url: "https://github.com/jito-foundation/jito-solana.git"
validator_yellowstone_repo_url: "https://github.com/rpcpool/yellowstone-grpc.git"
validator_shredstream_repo_url: "https://github.com/jito-labs/shredstream-proxy.git"
validator_peregrine_repo_url: "https://github.com/northgroup-so/peregrine.git"

# Shredstream configuration
validator_shredstream_block_engine_url: ""
validator_shredstream_regions: "amsterdam,frankfurt"
validator_shredstream_udp_port: "20000"
validator_shredstream_grpc_service_port: ""
validator_shredstream_auth_keypair: ""
# Optional base64-encoded keypair content; if set, it will be decoded
validator_shredstream_auth_keypair_b64: ""
# Optional base58-encoded 64-byte secret key; if set, it will be decoded to JSON array
validator_shredstream_auth_keypair_b58: ""

# Optional firewall exposure toggles (closed by default)
validator_firewall_expose_rpc: false
validator_firewall_expose_yellowstone_grpc: false
validator_firewall_expose_yellowstone_prometheus: false
validator_firewall_expose_peregrine_api: false

# -------------------------------------------------
# Yellowstone configuration (yellowstone-grpc-geyser)
# -------------------------------------------------
# Library and logging
validator_yellowstone_libpath: "../target/release/libyellowstone_grpc_geyser.so"
validator_yellowstone_log_level: "info"

# Tokio runtime
validator_yellowstone_tokio_worker_threads: 8
validator_yellowstone_tokio_affinity: "0-1,12-13"

# gRPC server
validator_yellowstone_grpc_address: "0.0.0.0:10000"
# TLS: set both paths to enable; otherwise renders null
validator_yellowstone_grpc_tls_cert_path: ""
validator_yellowstone_grpc_tls_key_path: ""
validator_yellowstone_grpc_compression_accept:
  - gzip
  - zstd
validator_yellowstone_grpc_compression_send:
  - gzip
  - zstd
validator_yellowstone_server_http2_adaptive_window: null
validator_yellowstone_server_http2_keepalive_interval: null
validator_yellowstone_server_http2_keepalive_timeout: null
validator_yellowstone_server_initial_connection_window_size: null
validator_yellowstone_server_initial_stream_window_size: null
validator_yellowstone_grpc_max_decoding_message_size: "4_194_304"
validator_yellowstone_grpc_snapshot_plugin_channel_capacity: null
validator_yellowstone_grpc_snapshot_client_channel_capacity: "50_000_000"
validator_yellowstone_grpc_channel_capacity: "100_000"
validator_yellowstone_grpc_unary_concurrency_limit: 100
validator_yellowstone_grpc_unary_disabled: false
validator_yellowstone_grpc_replay_stored_slots: 0

# Filter limits and names
validator_yellowstone_grpc_filter_name_size_limit: 128
validator_yellowstone_grpc_filter_names_size_limit: 4096
validator_yellowstone_grpc_filter_names_cleanup_interval: "1s"
# Set to an object matching the Yellowstone schema under `filters` to enforce limits, or keep {}
validator_yellowstone_grpc_filters: {}

# Yellowstone Prometheus
validator_yellowstone_prometheus_address: "0.0.0.0:8999"

# ---------------------------------
# Peregrine configuration (gPA cache)
# ---------------------------------
# gRPC to Yellowstone
validator_peregrine_grpc_enabled: true
validator_peregrine_grpc_endpoint: "http://127.0.0.1:10000"
validator_peregrine_grpc_use_tls: false
validator_peregrine_grpc_connection_timeout: "10s"
validator_peregrine_grpc_request_timeout: "30s"
validator_peregrine_grpc_retry_attempts: 3
validator_peregrine_grpc_retry_delay: "1s"

# RPC to validator
validator_peregrine_rpc_endpoint: "http://127.0.0.1:8899"
validator_peregrine_rpc_connection_timeout: "10s"
validator_peregrine_rpc_request_timeout: "10m"
validator_peregrine_rpc_max_connections: 100
validator_peregrine_rpc_max_idle_per_host: 10
validator_peregrine_rpc_keep_alive_timeout: "60s"

# HTTP API
validator_peregrine_api_address: "0.0.0.0:1945"
validator_peregrine_api_max_connections: 128
validator_peregrine_api_request_timeout: "30s"

# Performance tuning
validator_peregrine_perf_worker_threads: 16
validator_peregrine_perf_blocking_threads: 64
validator_peregrine_perf_buffer_size: 65536
validator_peregrine_perf_batch_size: 100
validator_peregrine_perf_enable_compression: true

# Peregrine programs/filters (override to supply your own). If empty, a built-in
# default list from the template is used.
# Example (YAML) â€” copied to JSON in the rendered config:
# validator_peregrine_programs:
#   - program_id: "675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8"
#     filters:
#       - memcmp:
#           offset: 0
#           bytes: [6]
#       - dynamic:
#           offset: 400
#           length: 32
validator_peregrine_programs: []
